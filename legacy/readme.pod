=pod

=head1 Running The C<vss2svn.pl> Script

(NOTE: THIS DOC IS STILL A WORK IN PROGRESS!)

=head2 RUNNING THE SCRIPT

See INSTALL.txt for instructions on how to install the necessary modules for this script to run.
Start a Windows Command Prompt, change to the directory where C<vss2svn.pl> is located, and type C<perl vss2svn.pl --help>. You should get usage information regarding the script's command-line arguments. If you get a Perl error message instead, you have not installed all required modules properly.

The URL you provide for "svnrepo" will become the base URL for all migrated
files, so for the usage example above, B<$/vss/project/foo.c> would become
B<http://svn/repository/url/foo.c>. Plan your migration accordingly so that you
end up with the structure that you want. The URL also cannot contain any
existing files; but as long as the "parent" of the URL is a Subversion
repository, any non-existent directories in the URL will be created.

The B<$SSDIR> environment variable must be set to the directory where your
system srcsafe.ini file is located; see the VSS online help for more info.
The "svn" and "ss" command-line executables must also be in your PATH.

This script is released into the public domain. In case you're wondering
about why the Vss2Svn packages have unused methods, it's because they came
from in-house modules which had more functionality than just this conversion.

I recommend converting only a small branch at first to see how things go.
This process takes a very long time for large databases. I have made liberal

Partway through the migration, you will be presented with a list of all
usernames which performed any checkin operations in the given VSS project.
If you want these user names to be preserved, you must add this list
(including a user "vss_migration" for creating directories and such) to your
Apache AuthUserFile with *blank passwords*. Apache must also *require* that
usernames be passed, otherwise SVN will use anonymous access and you lose
the usernames. So you need an "AuthType Basic" line or the like, as well as
an AuthUserFile. See L<http://svnbook.red-bean.com/svnbook/ch06s04.html#svn-ch-6-sect-4.3>
for more info.

=head2 HOW IT WORKS

TODO...

=head2 KNOWN PROBLEMS

Following is a list of known problems with this script. Listing a known issue
here implies that I have plans to correct it in the future but haven't gotten
around to it yet.

=over 4

SS.EXE version: It seems that version 6.0d of the SS.EXE program, distributed
with Visual Studio .NET, is much more prone to errors with the command line
client as version 6.0c. You can check the version of Visual SourceSafe you
have by typing "ss" at the Command Prompt, or by clicking Help -> About in
the Visual SourceSafe Explorer program. If you encounter many errors during
your migration, you may want to try installing a previous version of Visual
SourceSafe in order to perform the migration. Specifically, the error message
"Project Foo has been destroyed, and cannot be rebuilt" will repeatedly be given
with version 6.0d on some projects.

Labels: Label support is currently poor. This will hopefully be fixed
soon. In particular, label comments as well as SS.EXE label info output is
currently added to the respective revision's comment in Subversion. This script
may or may not eventually correctly parse labels and create a corresponding
/labels area in Subversion.

Non-English SS.EXE unsupported: Currently, only the English-language
version of the VSS command-line utility SS.EXE is supported. Non-English
characters are allowed in filenames and comments, but the SS.EXE program itself
must be English. A workaround for this issue is to find and rename the SSxx.DLL
in your VSS installation, where "xx" is your two-character language code. Then
rename the DLL back after the migration. Support for other languages will be
added soon.

Cloaked Projects: If your VSS repository has cloaked projects, this
script will crash. Un-cloak any projects before running this script.

Pinned Projects: If your VSS repository has pinned projects or files, then only
revisions up to and including the "pinned" version will be migrated. You will
lose all more recent versions.

Shared Projects: If your VSS repository has shared projects or files, multiple
copies of each shared object will be created in your migrated Subversion
repository, with no indication that the files were shared originally. In
effect, each shared copy from VSS will become its own object in Subversion.

=back

=head2 APR ICONV FILES

Subversion relies on the "ICONV" package of the Apache Portable Runtime library
to convert non-ascii characters in directories, filenames, and comments to its
native internal UTF-8 format. In order to ensure the correct ICONV files are
used, the APR_ICONV_PATH environment variable must be set to the "iconv"
directory in your Subversion client's program directory.

However, this environment variable is not automatically set by the Subversion
client install utility on Windows. Furthermore, the popular TortoiseSVN plugin
for Windows Explorer installs its own (incompatible) ICONV files and sets this
variable to its own location. This means that non-ascii characters can cause
the migration to fail with fatal errors.

To fix this, you can do one of the following: set the APR_ICONV_PATH
environment variable to the correct "iconv" directory in your Subversion
client installation; use the --iconv argument to explicitly specify a path
to set the APR_ICONV_PATH variable to during the script's run; or specify
"--iconv !" to have the script set this variable to what it determines to be
the correct value.

=end